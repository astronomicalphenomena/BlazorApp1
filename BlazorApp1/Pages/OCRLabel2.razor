@page "/ocrlabel/{BookName}"
@inject Data.BlazorApp1Context MyService
@using Microsoft.AspNetCore.Mvc.RazorPages;
@using Microsoft.EntityFrameworkCore;
<PageTitle>OCR标注</PageTitle>

@if (OCRbook == null)
{
    <p><em>页码不存在</em></p>
}

@if (OCRbook != null)
{
    <h3>OCR标注  @BookName 第 @PageNumber 页 </h3>

    <img title="第 @PageNumber 页" src="ocrlabel/@BookName/@(PageNumber).jpg" style="max-width:100%;overflow:hidden;" />
    <EditForm Model="@OCRbook" OnSubmit="@HandleSubmit">
        <table class="table">
            <tbody>
                @foreach (var item in @OCRbook)
                {
                    <tr>
                        <td width="90%">
                            <InputText  id="name" @bind-Value="item.Text" style="width:100%"/>
                        </td>

                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <h5>OCR标注  @BookName 第 @PageNumber 页 </h5>
                </tr>
               
            </tfoot>
        </table>


        
    </EditForm>
    <Affix OffsetBottom=10>
    <EditForm Model="@PageNumber" OnSubmit="@OnParametersSet">
        <Button Size="@ButtonSize.Large" type="submit">提交</Button>
        <Button Size="@ButtonSize.Large" @onclick="@(e=>{PageNumber = (int.Parse(PageNumber)-1).ToString();OnParametersSet();})">上一页</Button>
        <Button Size="@ButtonSize.Large" @onclick="@(e=>{PageNumber = (int.Parse(PageNumber)+1).ToString();OnParametersSet();})">下一页</Button>
         第 @PageNumber 页 
        跳转到第
        <InputText id="page" @bind-Value="PageNumber" />
        页
    </EditForm>
    </Affix>
}
@code {
    [Parameter]
    public string PageNumber { get; set; } = "1";
    [Parameter]
    public string BookName { get; set; }

    public IEnumerable<Data.OCRBookLine> OCRbook { get; set; }

    
    protected override void OnInitialized()
    {
        PageNumber = PageNumber ?? "fantastic";
        MyService.BookName.ToList();


    }
    protected override void OnParametersSet()
    {
        OCRbook = MyService.OCRBookLine.Where(b => b.BookName.Name == BookName && b.PageNumber == int.Parse(PageNumber));
    }
    private void HandleSubmit()
    {
        foreach(var b in OCRbook)
        {
            MyService.OCRBookLine.Update(b);
        }
        MyService.SaveChanges();
        // Process the form
    }

    private async void TransDB()
    {
        var OCRbooks = await MyService.OCRbook.ToListAsync();

        var Lines = OCRbooks.SelectMany(getLine).ToArray();

        await MyService.OCRBookLine.AddRangeAsync(Lines);

        await MyService.SaveChangesAsync();
    }

    private IEnumerable<Data.OCRBookLine> getLine(Data.OCRbook o)
    {
        var Lines = o.Text.rec_res.Zip(o.Text.boxes).ToList();
        foreach(var i in Enumerable.Range(0,Lines.Count))
        {
            var line = new Data.OCRBookLine();
            line.BookNameID = o.BookNameID;
            line.PageNumber = o.PageNumber;
            line.Line = i;
            line.Text = Lines[i].First.Text;
            line.Top = (int)MathF.Round(Lines[i].Second[0]);
            line.Right = (int)Lines[i].Second[1];
            line.Bottom = (int)Lines[i].Second[2];
            line.Left = (int)Lines[i].Second[3];
            yield return line;
        }
    }
}
